"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5235],{8981:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=t(7462),n=(t(7294),t(3905));t(1839);const r={title:"Adding flavor-specific tasks to Gradle"},l=void 0,i={permalink:"/ru/blog/2016/01/13/gradle",source:"@site/blog/2016-01-13-gradle.md",title:"Adding flavor-specific tasks to Gradle",description:"Suppose you have a multi-flavored project. Each flavor is a separate app, so you have to use separate google-services.json file for each flavor.",date:"2016-01-13T00:00:00.000Z",formattedDate:"13 \u044f\u043d\u0432\u0430\u0440\u044f 2016 \u0433.",tags:[],readingTime:1.1,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Adding flavor-specific tasks to Gradle"},prevItem:{title:"Email-\u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u0441\u043e \u0441\u0432\u043e\u0435\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430: \u043f\u043e\u0434\u0432\u043e\u0434\u043d\u044b\u0435 \u043a\u0430\u043c\u043d\u0438",permalink:"/ru/blog/2016/01/17/email"},nextItem:{title:"\u041f\u043e\u0447\u0435\u043c\u0443 \u044f \u043d\u0435 \u043c\u043e\u0433\u0443 \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u044c?",permalink:"/ru/blog/2014/09/22/django-email"}},s={authorsImageUrls:[]},p=[],d={toc:p};function c(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Suppose you have a multi-flavored project. Each flavor is a separate app, so you have to use separate ",(0,n.kt)("inlineCode",{parentName:"p"},"google-services.json")," file for each flavor."),(0,n.kt)("p",null,"The problem is that ",(0,n.kt)("inlineCode",{parentName:"p"},"google-services.json")," file must be placed in the ",(0,n.kt)("inlineCode",{parentName:"p"},"app/")," directory (",(0,n.kt)("strong",{parentName:"p"},"update:")," as of version 2.0.0-alpha3 of the plugin support was added for build types), so we have to copy this file to ",(0,n.kt)("inlineCode",{parentName:"p"},"app/")," directory on every flavor build process."),(0,n.kt)("p",null,"If we want to automate this process, we can add flavor-specific tasks to our ",(0,n.kt)("inlineCode",{parentName:"p"},"build.gradle")," file and make them run depending on what flavor we are building."),(0,n.kt)("p",null,"Here is my way of achieving this."),(0,n.kt)("p",null,"First of all, Add this code to ",(0,n.kt)("inlineCode",{parentName:"p"},"productFlavors")," section:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-groovy"},'all { flavor ->\n    task("${flavor.name}GoogleServices", type: Copy) {\n      description = \'Switches to google-services.json depending on flavor\'\n      from "src/${flavor.name}"\n      include "google-services.json"\n      into "."\n    }\n}\n')),(0,n.kt)("p",null,"This will create tasks ",(0,n.kt)("inlineCode",{parentName:"p"},"flavor1GoogleServices"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"flavor2GoogleServices")," and so on. This task will copy ",(0,n.kt)("inlineCode",{parentName:"p"},"google-services.json")," file from ",(0,n.kt)("inlineCode",{parentName:"p"},"src/flavor1/")," folder to ",(0,n.kt)("inlineCode",{parentName:"p"},"app/")," folder."),(0,n.kt)("p",null,"Now add this code to the end of the ",(0,n.kt)("inlineCode",{parentName:"p"},"build.gradle")," file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-groovy"},'afterEvaluate {\n    android.productFlavors.all {\n      flavor ->\n        tasks."generate${flavor.name.capitalize()}DebugResources".dependsOn "${flavor.name}GoogleServices"\n        tasks."generate${flavor.name.capitalize()}ReleaseResources".dependsOn "${flavor.name}GoogleServices"\n    }\n}\n')),(0,n.kt)("p",null,"This code runs after a project is evaluated. It adds dependencies to tasks ",(0,n.kt)("inlineCode",{parentName:"p"},"generateFlavor1DebugResources"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"generateFlavor2DebugResources")," etc. on our tasks."),(0,n.kt)("p",null,"That\u2019s all. After switching build variant in Android Studio the right task for this variant will run and update json-file."))}c.isMDXComponent=!0}}]);